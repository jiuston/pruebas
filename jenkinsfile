
pipeline {
  agent any
 /*parameters {
        string(name: 'name_container', defaultValue: 'proyecto-spring-pruebas', description: 'nombre del docker')
        string(name: 'name_imagen', defaultValue: 'proyecto-spring-pruebas', description: 'nombre de la imagen')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '95', description: 'puerto a publicar')
    }*/
    environment {
        name_final = "contenedorpruebas"        
    }
    stages {
         /* stage('stop/rm') {

            when {
                expression { 
                    DOCKER_EXIST = bat(returnStdout: true, script: 'echo "$(docker ps -q --filter name=${name_final})"').trim()
                    return  DOCKER_EXIST != '' 
                }
            }
            steps {
                script{
                    bat ''' 
                         docker stop ${name_final}
                    '''
                    }
                    
                }                   
                                  
            }*/
           
        stage('build') {
            steps {
                script{
                    bat ''' 
                    docker build -t proyecto-spring-pruebas:latest ./
                    '''
                    }
                    
                }                    
                                  
            }
            stage('run') {
            steps {
                script{
                    bat ''' 
                        docker run --name ${name_final} proyecto-spring-pruebas:latest
 
                    '''
                    }
                    
                }                    
                                  
            }
            
          
        }   
    }
